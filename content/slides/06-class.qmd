---
title: "GVPT Maths Camp"
subtitle: "Data Visualisation II"
format: 
  revealjs:
    slide-number: true
    preview-links: auto
    theme: solarized
    embed-resources: true
execute: 
  echo: true
  fig-align: "center"
---

```{r}
#| echo: false

library(tidyverse)
library(ggthemes)
```

## Learning objectives for today

1.  Introduction to R

2.  Improve your first plot

3.  Test your hypotheses using informative data visualizations

## Skipping to the end

```{r}
#| echo: false

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  theme(
    legend.position = "bottom",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    plot.title.position = "plot",
    plot.title = element_text(face = "bold")
  ) + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

## How did we do this?

```{r}
#| eval: false

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  theme(
    legend.position = "bottom",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    plot.title.position = "plot",
    plot.title = element_text(face = "bold")
  ) + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

::: aside
We will step through this now. By the end of this session, you will be able to make your own colourful data visualisations using R.
:::

## EXERCISE {background-color="#B56576"}

How many rows are in `mpg`? How many columns?

```{r}
#| eval: false

nrow(mpg)
ncol(mpg)
```

<br>

What does the `drv` variable describe?

```{r}
#| eval: false

?mpg
```

## EXERCISE {background-color="#B56576"}

Make a scatterplot of `hwy` vs `cyl`.

<br>

What happens if you make a scatterplot of `class` vs `drv`? Why is the plot not useful? 

<br>

Which `geom` might be a better choice? 

## EXERCISE {background-color="#B56576"}

Why does the following give an error and how would you fix it?

```{r}
#| eval: false

ggplot(data = mpg) + 
  geom_point()
```

<br>

Add the following caption to the plot you made in the previous exercise: “Data come from the ggplot2 package.” HINT: Look at the documentation for `labs()`.

## Flexible visualization

You can use visual elements to communicate your findings in engaging ways.

```{r}
#| code-line-numbers: "2"

ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = class == "2seater"))
```

## Changing the look of your plots

```{r}
#| code-line-numbers: "2"

ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy), colour = "red")
```

## EXERCISE {background-color="#B56576"}

What's gone wrong with this code? Why are the points not blue?

```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
```

## EXERCISE {background-color="#B56576"}

Which variables in `mpg` are categorical? Which variables are continuous?

<br>

Map a continuous variable to `color`, `size`, and `shape.` How do these aesthetics behave differently for categorical vs. continuous variables?

<br>

What happens if you map the same variable to multiple aesthetics?

## Let's clean our graph up

Less is more when it comes to data visualization.

```{r}
#| eval: false
#| code-line-numbers: "4"

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  theme_minimal() + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

::: aside
All pre-set `ggplot` themes can be found in the [`ggplot` documentation](https://ggplot2.tidyverse.org/reference/ggtheme.html).
:::

## Let's clean this up

```{r}
#| echo: false

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  theme_minimal() + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

## EXERCISE {background-color="#B56576"}

Head over to the [`ggplot` documentation](https://ggplot2.tidyverse.org/reference/ggtheme.html) and find your favorite preset theme. 

## Creating your own theme

```{r}
#| eval: false
#| code-line-numbers: "4-10"

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  theme(
    legend.position = "bottom",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    plot.title.position = "plot",
    plot.title = element_text(face = "bold")
  ) + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

::: aside
All theme elements that you can control can be found in the [`ggplot` documentation](https://ggplot2.tidyverse.org/reference/theme.html#arguments). There are a lot!
:::

## Creating your own theme

```{r}
#| echo: false

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  theme(
    legend.position = "bottom",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    plot.title.position = "plot",
    plot.title = element_text(face = "bold")
  ) + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

## The before shot

```{r}
#| echo: false

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(colour = class)) + 
  geom_smooth(method = "lm") + 
  labs(
    title = "Engine displacement and highway miles per gallon",
    subtitle = "Values for seven different classes of cars",
    x = "Engine displacement (L)",
    y = "Highway miles per gallon"
  ) + 
  scale_color_colorblind()
```

## EXERCISE {background-color="#B56576"}

1.  Customize the last plot you made using the `theme()` argument.

## Visualizing distributions

```{r}
ggplot(mpg, aes(x = drv)) + 
  geom_bar()
```

## Visualizing distributions

*Reorder in relation to frequency*

```{r}
ggplot(mpg, aes(x = fct_infreq(drv))) +
  geom_bar()
```

## Visualizing numeric variables

```{r}
ggplot(mpg, aes(x = hwy)) +
  geom_histogram()
```

## Visualizing numeric variables

```{r}
ggplot(mpg, aes(x = hwy)) +
  geom_density()
```

## Visualizing numeric variables

```{r}
ggplot(mpg, aes(x = hwy, colour = drv)) +
  geom_density()
```

## Visualizing numeric variables

```{r}
ggplot(mpg, aes(x = hwy, colour = drv, fill = drv)) +
  geom_density(alpha = 0.5)
```

## Summary

This session you:

1.  Set up your data science tools

2.  Plotted complex data in an engaging way

3.  Discovered interesting relationships in the data

4.  Connected these relationships or trends to your expectations (or hypotheses about the data)

## HOMEWORK {background-color="#B56576"}

In the final session, you will apply the skills you will learn over the next few days to a problem that interests you. To prepare for this, you need to find a data set that:

1.  Is relevant to your research interests,

2.  Contains continuous and discrete variables.
